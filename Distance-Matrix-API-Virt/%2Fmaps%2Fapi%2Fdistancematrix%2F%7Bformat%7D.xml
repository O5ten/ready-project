<?xml version="1.0" encoding="UTF-8"?>
<con:restMockAction name="/maps/api/distancematrix/{format}" method="GET" resourcePath="/maps/api/distancematrix/{format}" id="8e4d559e-fa22-42b6-8c65-400f93609553" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="8e4d559e-fa22-42b6-8c65-400f93609553fileName">%2Fmaps%2Fapi%2Fdistancematrix%2F%7Bformat%7D</con:setting></con:settings><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchConfig/><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="d74e15c0-1079-4db1-8f93-e18113d5f887" httpResponseStatus="200" mediaType="application/json" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent/></con:response></con:restMockAction>